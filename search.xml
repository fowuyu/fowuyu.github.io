<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Go语言的值语义与引用语义]]></title>
    <url>%2F2018%2F10%2F16%2FGo%E8%AF%AD%E8%A8%80%E7%9A%84%E5%80%BC%E8%AF%AD%E4%B9%89%E4%B8%8E%E5%BC%95%E7%94%A8%E8%AF%AD%E4%B9%89%2F</url>
    <content type="text"><![CDATA[​ 任何一门语言，如果其有指针概念，则需要了解这门语言是否拥有引用语义，当然你可以说任何引用语义都是值语义（正确的废话）。之所以这个内容需要深入理解，因为它涉及到一个重要的内容，那就是比较 ，编程语言的三大结构，都需要依赖比较功能，而比较就需要我们理解比较的到底是变量的值，还是变量指向的值。 12345func main&#123; a := "yichen" b := "yichen" fmt.Print(a == b) //true 可以看出string是值语义&#125; 123456func main&#123; a := [3]&#123;1,2,3&#125; b := a b[1]++ fmt.Print(a,b) //&#123;1,2,3&#125;,&#123;1,3,3&#125; 可以看出数组居然也是值语义&#125; 123456func main&#123; a := []&#123;1,2,3&#125; b := a b[1]++ fmt.Print(a,b) //&#123;1,3,3&#125;,&#123;1,3,3&#125; 可以看出slice是引用语义&#125; 12345678910type Person struct&#123; age int name string&#125;func main() &#123; yichen := Person&#123;21,"yichen"&#125; pengfan := Person&#123;21,"yichen"&#125; fmt.Println(yichen == pengfan) //true 不可思议的是struct也是值语义&#125; 1234567891011type Person struct&#123; age int name string&#125;func main() &#123; a := Person&#123;21,"yichen"&#125; b := &amp;a c := &amp;a fmt.Println(b == c) //true 指针也是值语义&#125; 总结值语义基本类型，如byte、int、bool、float32、float64和string等;复合类型，如数组(array)、结构体(struct)和指针(pointer)等。 引用语义slice,map,list,heap,ring,channels]]></content>
      <categories>
        <category>Golang</category>
      </categories>
      <tags>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Home]]></title>
    <url>%2F2018%2F10%2F16%2FHome%2F</url>
    <content type="text"><![CDATA[​ 欢迎来到我的博客，此博客是为了记录个人学习，生活中的一些随笔，如有帮助，欢迎点击文章底部的打赏按钮，比心。]]></content>
  </entry>
</search>
